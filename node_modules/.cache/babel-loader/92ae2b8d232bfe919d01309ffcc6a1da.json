{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pirag\\\\Desktop\\\\react-app\\\\src\\\\Components\\\\Calculator.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0412\\u043E\\u0434\\u0430 \\u0437\\u0430\\u043A\\u0438\\u043F\\u0438\\u0442.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"\\u0412\\u043E\\u0434\\u0430 \\u043D\\u0435 \\u0437\\u0430\\u043A\\u0438\\u043F\\u0438\\u0442.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n}\n\n_c = BoilingVerdict;\n\nclass Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      temperature: ''\n    };\n  }\n\n  handleChange(e) {\n    this.setState({\n      temperature: e.target.value\n    });\n  }\n\n  render() {\n    const temperature = this.state.temperature;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0442\\u0435\\u043C\\u043F\\u0435\\u0440\\u0430\\u0442\\u0443\\u0440\\u0443 \\u0432 \\u0433\\u0440\\u0430\\u0434\\u0443\\u0441\\u0430\\u0445 \\u0426\\u0435\\u043B\\u044C\\u0441\\u0438\\u044F:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: temperature,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celsius: parseFloat(temperature)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"sources":["C:/Users/pirag/Desktop/react-app/src/Components/Calculator.js"],"names":["React","BoilingVerdict","props","celsius","Calculator","Component","constructor","handleChange","bind","state","temperature","e","setState","target","value","render","parseFloat"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAC7B,MAAIA,KAAK,CAACC,OAAN,IAAiB,GAArB,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AACD,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;KALQF,c;;AAOT,MAAMG,UAAN,SAAyBJ,KAAK,CAACK,SAA/B,CAAyC;AACvCC,EAAAA,WAAW,CAACJ,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAE;AAAd,KAAb;AACD;;AAGDH,EAAAA,YAAY,CAACI,CAAD,EAAI;AACd,SAAKC,QAAL,CAAc;AAACF,MAAAA,WAAW,EAAEC,CAAC,CAACE,MAAF,CAASC;AAAvB,KAAd;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAML,WAAW,GAAG,KAAKD,KAAL,CAAWC,WAA/B;AACA,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,KAAK,EAAEA,WADT;AAEE,QAAA,QAAQ,EAAE,KAAKH;AAFjB;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,cAAD;AACE,QAAA,OAAO,EAAES,UAAU,CAACN,WAAD;AADrB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAxBsC","sourcesContent":["import React from 'react';\r\n\r\n\r\nfunction BoilingVerdict(props) {\r\n  if (props.celsius >= 100) {\r\n    return <p>Вода закипит.</p>;\r\n  }\r\n  return <p>Вода не закипит.</p>;\r\n}\r\n\r\nclass Calculator extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.state = {temperature: ''};\r\n  }\r\n\r\n\r\n  handleChange(e) {\r\n    this.setState({temperature: e.target.value});\r\n  }\r\n\r\n  render() {\r\n    const temperature = this.state.temperature;\r\n    return (\r\n      <fieldset>\r\n        <legend>Введите температуру в градусах Цельсия:</legend>\r\n        <input\r\n          value={temperature}\r\n          onChange={this.handleChange} />\r\n        <BoilingVerdict\r\n          celsius={parseFloat(temperature)} />\r\n      </fieldset>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}