{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/react-app/src/Components/Calculator.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return celsius * 9 / 5 + 32;\n}\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"The water would boil.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"The water would not boil.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 10\n  }, this);\n}\n\n_c = BoilingVerdict;\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n\n  if (Number.isNaN(input)) {\n    return '';\n  }\n\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    // this.setState({temperature: e.target.value});\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n        children: [\"Enter temperature in \", scaleNames[scale], \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: temperature,\n        onChange: this.handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {\n      temperature: '',\n      scale: 'c'\n    };\n  }\n\n  handleCelsiusChange(temperature) {\n    debugger;\n    this.setState({\n      scale: 'c',\n      temperature\n    });\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({\n      scale: 'f',\n      temperature\n    });\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"c\",\n        temperature: celsius,\n        onTemperatureChange: this.handleCelsiusChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n        scale: \"f\",\n        temperature: fahrenheit,\n        onTemperatureChange: this.handleFahrenheitChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n        celsius: parseFloat(celsius)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"BoilingVerdict\");","map":{"version":3,"sources":["/Users/admin/Desktop/react-app/src/Components/Calculator.js"],"names":["React","scaleNames","c","f","toCelsius","fahrenheit","toFahrenheit","celsius","BoilingVerdict","props","tryConvert","temperature","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString","TemperatureInput","Component","constructor","handleChange","bind","e","onTemperatureChange","target","value","render","scale","Calculator","handleCelsiusChange","handleFahrenheitChange","state","setState"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst scaleNames = {\n  c: 'Celsius',\n  f: 'Fahrenheit'\n};\n\nfunction toCelsius(fahrenheit) {\n  return (fahrenheit - 32) * 5 / 9;\n}\n\nfunction toFahrenheit(celsius) {\n  return (celsius * 9 / 5) + 32;\n}\n\n\nfunction BoilingVerdict(props) {\n  if (props.celsius >= 100) {\n    return <p>The water would boil.</p>;\n  }\n  return <p>The water would not boil.</p>;\n}\n\n\nfunction tryConvert(temperature, convert) {\n  const input = parseFloat(temperature);\n  if (Number.isNaN(input)) {\n    return '';\n  }\n  const output = convert(input);\n  const rounded = Math.round(output * 1000) / 1000;\n  return rounded.toString();\n}\n\nclass TemperatureInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n  handleChange(e) {\n    // this.setState({temperature: e.target.value});\n    this.props.onTemperatureChange(e.target.value);\n  }\n\n  render() {\n    const temperature = this.props.temperature;\n    const scale = this.props.scale;\n    return (\n      <fieldset>\n        <legend>Enter temperature in {scaleNames[scale]}:</legend>\n        <input value={temperature}\n               onChange={this.handleChange} />\n      </fieldset>\n    );\n  }\n}\n\nexport default class Calculator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleCelsiusChange = this.handleCelsiusChange.bind(this);\n    this.handleFahrenheitChange = this.handleFahrenheitChange.bind(this);\n    this.state = {temperature: '', scale: 'c'};\n  }\n\n  handleCelsiusChange(temperature) {\n    debugger\n    this.setState({scale: 'c', temperature});\n  }\n\n  handleFahrenheitChange(temperature) {\n    this.setState({scale: 'f', temperature});\n  }\n\n  render() {\n    const scale = this.state.scale;\n    const temperature = this.state.temperature;\n    const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n    const fahrenheit = scale === 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n    return (\n      <div>\n        <TemperatureInput\n          scale=\"c\"\n          temperature={celsius}\n          onTemperatureChange={this.handleCelsiusChange} />\n        <TemperatureInput\n          scale=\"f\"\n          temperature={fahrenheit}\n          onTemperatureChange={this.handleFahrenheitChange} />\n        <BoilingVerdict\n          celsius={parseFloat(celsius)} />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}