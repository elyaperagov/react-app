{"ast":null,"code":"var _jsxFileName = \"/Users/admin/Desktop/my-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; // import App from './App';\n\nimport LoginControl from './LoginControl';\nimport Comment from './Comment';\nimport Clock from './Clock';\nimport Mailbox from './Mailbox';\nimport LoggingButton from './LoggingButton';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nconst comment = {\n  date: new Date(),\n  text: 'I hope you enjoy learning React!',\n  author: {\n    name: 'Hello pidar',\n    avatarUrl: 'http://placekitten.com/g/64/64'\n  }\n};\n\nfunction Form() {\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log('Отправлена форма.');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Form;\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isToggleOn: true\n    };\n    this.state = {\n      isLogged: true\n    }; // Эта привязка обязательна для работы `this` в колбэке.\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    console.log(this.state.isLogged);\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      isLogged: !prevState.isLogged\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: this.handleClick,\n      children: this.state.isToggleOn ? 'Включено' : 'Выключено'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst messages = ['React', 'Re: React', 'Re:Re: React'];\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Comment, {\n      date: comment.date,\n      text: comment.text,\n      author: comment.author\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Clock, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoggingButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginControl, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Mailbox, {\n      unreadMessages: messages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_c2 = App;\nroot.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 86,\n  columnNumber: 13\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/admin/Desktop/my-app/src/index.js"],"names":["React","ReactDOM","LoginControl","Comment","Clock","Mailbox","LoggingButton","reportWebVitals","root","createRoot","document","getElementById","comment","date","Date","text","author","name","avatarUrl","Form","handleSubmit","e","preventDefault","console","log","Toggle","Component","constructor","props","state","isToggleOn","isLogged","handleClick","bind","setState","prevState","render","messages","App"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import App from './App';\nimport LoginControl from './LoginControl';\nimport Comment from './Comment';\nimport Clock from './Clock';\nimport Mailbox from './Mailbox';\nimport LoggingButton from './LoggingButton';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\nconst comment = {\n  date: new Date(),\n  text: 'I hope you enjoy learning React!',\n  author: {\n    name: 'Hello pidar',\n    avatarUrl: 'http://placekitten.com/g/64/64'\n  }\n};\n\nfunction Form() {\n  function handleSubmit(e) {\n    e.preventDefault();\n    console.log('Отправлена форма.');\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <button type=\"submit\">Отправить</button>\n    </form>\n  );\n}\n\nclass Toggle extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {isToggleOn: true};\n    this.state = {isLogged: true};\n\n    // Эта привязка обязательна для работы `this` в колбэке.\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    console.log(this.state.isLogged)\n    this.setState(prevState => ({\n      isToggleOn: !prevState.isToggleOn,\n      isLogged: !prevState.isLogged\n    }));\n  }\n\n  render() {\n    return (\n      <button onClick={this.handleClick}>\n        {this.state.isToggleOn ? 'Включено' : 'Выключено'}\n      </button>\n    );\n  }\n}\n\n\n\n\nconst messages = ['React', 'Re: React', 'Re:Re: React'];\n\n\nfunction App() {\n  return (\n    <div>\n      <Comment\n        date={comment.date}\n        text={comment.text}\n        author={comment.author} />\n      <Clock />\n      <LoggingButton />\n      <LoginControl />\n      <Toggle />\n      <Form />\n      <Mailbox unreadMessages={messages} />\n    </div>\n  );\n}\n\nroot.render(<App />, document.getElementById('root'));\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"]},"metadata":{},"sourceType":"module"}